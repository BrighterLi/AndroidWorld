依赖注入
https://zhuanlan.zhihu.com/p/53463525
https://www.jianshu.com/p/4808edde31c2
“依赖注入”的基本用法是指从“外部”向客户提供服务的行为。换句话说，每当客户需要服务时，他们只是要求他们而不是试图在内部构建这些服务。

在程序中，一个对象中的方法需要依赖另一个对象，该对象中保存其所依赖对象的实例，生成依赖对象的方式不再该对象中通过new创建，而是调用者外部创建依赖对象，通过一定的方式进行传入。

在Java（类似于Kotlin和许多其他面向对象语言）中，有三种方法：构造函数注入，方法注入和字段注入。 您可以将这三种注入方法视为依赖注入的基本技术。

依赖注入框架
Dagger
Koin

默认情况下使用构造函数注入
客户端应尽可能通过构造函数参数请求所有服务。
构造函数注入的优点是：
代码变得更具可读性，因为所有依赖项都在构造函数中明确声明。
您不会忘记将服务传递给客户端，因为编译器将标记缺少的构造函数参数。
注入构造函数的服务可以最终确定，这在多线程代码的上下文中很重要。
构造函数参数在单元测试中最容易被模拟。
所以，第一条规则是你应该总是使用构造函数注入，除非有非常具体的理由不这样做。

对Android顶级组件使用字段注入
Android中有两组“顶级”组件：
1 Android框架为您实例化的组件：Application, Activity, Service等。
2 Fragment
由于您不自己实例化第一组中的组件，因此不能对它们使用构造函数注入。 即使您可以实例化Fragments，您仍然应该使用它们的“无参数”默认构造函数来执行此操作，因此您不会直接将服务传递给它们。
由于无法使用构造函数注入，因此必须回退到方法注入或字段注入。 我建议您在这些情况下选择字段注入，因为方法注入不会为您带来任何好处，但肯定会使您的代码更难以阅读和理解。