apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion



    defaultConfig {
        applicationId "com.fenqile.androidknowledgepoints"
        minSdkVersion 19
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        apply plugin: 'kotlin-kapt'

        //arouter(Android页面路由框架)
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

        //?
        ndk {
            moduleName "androidknowledgepoints"
            //abiFilters 'x86', 'armeabi-v7a', 'arm64-v8a'
            abiFilters 'armeabi-v7a'
            ldLibs "log"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        //?
        externalNativeBuild {
            ndkBuild {
                path 'src/main/jni/Android.mk'
            }
        }
    }

    sourceSets {
        main {
            jni.srcDirs = []
            //jni.srcDirs = ['src/main/jni']  //需要编译的xx.c文件的地址
            jniLibs.srcDirs = ['libs'] //引用的xx.so文件的地址
            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
        }
    }

    /*buildFeatures {
        viewBinding true
    }*/

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //依赖本地的其它Module
    //implementation project(':acrosslibrary') //可以依赖library

    //implementation 'com.android.support:appcompat-v7:29.+'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'com.google.code.gson:gson:2.8.4'
    def kotlin_version = "1.5.20"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    implementation 'com.alibaba:arouter-api:1.2.2'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.3'

    //room数据库
    def roomVersion = "2.3.0"
    implementation("androidx.room:room-runtime:$roomVersion")
    annotationProcessor("androidx.room:room-compiler:$roomVersion")
// To use Kotlin annotation processing tool (kapt) 添加这个，编译的时候系统会帮我们自动生成代码
    kapt("androidx.room:room-compiler:$roomVersion")
// optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$roomVersion")

    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // Coroutines 协程
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
}
